---
import {ViewTransitions} from 'astro:transitions'
import GoogleFonts from '#components/header-google-fonts.astro'
import GlobalStyles from '#components/header-global-styles.astro'
import BodyHidden from '#components/body-hidden.astro'
import site from '#/metadata.json'
import type * as POSTS from '#content/posts/_posts'
import {url} from '#modules/site'

interface Props {
	entry?: POSTS.CollectionEntry
}

const {entry} = Astro.props
let content = await entry?.render()
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link
			rel="icon"
			type="image/svg+xml"
			href="/favicon.svg?v=1"
		/>
		<meta name="generator" content={Astro.generator} />
		<link
			rel="alternate"
			type="application/rss+xml"
			title=`RSS Feed for ${site.title}`
			href={`${site.feed.path}/${site.feed.rssFilename}`}
		/>
		<link rel="sitemap" href="/sitemap-index.xml" />
		<GoogleFonts />
		<GlobalStyles />
		<slot name="page-head" />
		<slot name="page-meta">
			<title>
				{site.title}
			</title>
		</slot>
		<ViewTransitions />
		{
			entry?.collection === 'posts' && (
				<>
					<script
						type="application/ld+json"
						set:html={JSON.stringify(
							//   {
							//   "@context": "http://schema.org",
							//   "@type": "WebPage",
							//   name: entry.title,
							//   // image,
							//   // url,
							//   url: url(entry.slug),
							// }
							// how do i reference types (for publisher)?
							{
								'@context': 'https://schema.org',
								'@type': 'BlogPosting',
								'headline': entry.data.title,
								// image: "https://benborgers.com/assets/json-ld.png",
								'publisher': {
									'@type': 'Organization',
									'name': 'chantastic, llc',
									'url': 'https://chan.dev',
									// logo: {
									//   "@type": "ImageObject",
									//   url: "https://benborgers.com/assets/index.png",
									//   width: "1200",
									//   height: "630",
									// },
								},
								'url': url(entry.slug),
								'datePublished': entry.data.publishDate,
								// dateCreated: "2020-01-06T00:00:00.000Z",
								// dateModified: "2020-01-06T00:00:00.000Z",
								'description': entry.data.description,
								'author': {
									'@type': 'Person',
									'name': 'chantastic',
									'url': 'https://chan.dev',
								},
								'mainEntityOfPage': {
									'@type': 'WebPage',
									'@id': 'https://chan.dev',
								},
							}
						)}
					/>
				</>
			)
		}
		{
			entry?.collection === 'recipes' && (
				<>
					<script
						type="application/ld+json"
						set:html={JSON.stringify({
							'@context': 'https://schema.org',
							'@type': 'Recipe',
							'name': entry.data.title,
							// image: "https://benborgers.com/assets/json-ld.png",
							'publisher': {
								'@type': 'Organization',
								'name': 'chantastic, llc',
								'url': 'https://chan.dev',
								// logo: {
								//   "@type": "ImageObject",
								//   url: "https://benborgers.com/assets/index.png",
								//   width: "1200",
								//   height: "630",
								// },
							},
							'url': url(entry.slug),
							// 'datePublished': entry.data.publishDate,
							// dateCreated: "2020-01-06T00:00:00.000Z",
							// dateModified: "2020-01-06T00:00:00.000Z",
							'description': entry.data.description,
							'author': {
								'@type': 'Person',
								'name': 'chantastic',
								'url': 'https://chan.dev',
							},
							'mainEntityOfPage': {
								'@type': 'WebPage',
								'@id': 'https://chan.dev',
							},
						})}
					/>
				</>
			)
		}
	</head>
	<body
		class="flex bg-white dark:bg-gray-900"
		style="padding: 1rem"
		id="body"
	>
		<div>
			<slot />
			<!-- {
      content?.headings &&
        Boolean(
          content.headings?.filter(
            (heading) => heading.slug === "contents"
          ).length
        ) && (
          <Prose>
            <ul>
              {content.headings.map(({ depth, slug, text }) => (
                <li data-id={slug} data-depth={depth}>
                  <a href={`#${slug}`}>{text}</a>
                </li>
              ))}
            </ul>
          </Prose>
        )
    } -->
		</div>
		<BodyHidden />
		<!-- Cloudflare Web Analytics -->
		<script
			defer
			src="https://static.cloudflareinsights.com/beacon.min.js"
			data-cf-beacon='{"token": "8230f43ff33b4ddf88d829faf47ad411"}'
		></script><!-- End Cloudflare Web Analytics -->
	</body>
</html>
