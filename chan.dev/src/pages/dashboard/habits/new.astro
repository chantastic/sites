---
import Layout from '#layouts/Layout.astro'
import Prose from '#components/prose.astro'
import SignOut from '#components/sign-out.astro'

import {ConvexHttpClient} from 'convex/browser'
import {api} from '../../../../convex/_generated/api.js'
const client = new ConvexHttpClient(import.meta.env.CONVEX_URL)

export const prerender = false

const {user} = Astro.locals

const recurrencePatterns = [
	'0000000',
	'0000001',
	'0000010',
	'0000011',
	'0000100',
	'0000101',
	'0000110',
	'0000111',
	'0001000',
	'0001001',
	'0001010',
	'0001011',
	'0001100',
	'0001101',
	'0001110',
	'0001111',
	'0010000',
	'0010001',
	'0010010',
	'0010011',
	'0010100',
	'0010101',
	'0010110',
	'0010111',
	'0011000',
	'0011001',
	'0011010',
	'0011011',
	'0011100',
	'0011101',
	'0011110',
	'0011111',
	'0100000',
	'0100001',
	'0100010',
	'0100011',
	'0100100',
	'0100101',
	'0100110',
	'0100111',
	'0101000',
	'0101001',
	'0101010',
	'0101011',
	'0101100',
	'0101101',
	'0101110',
	'0101111',
	'0110000',
	'0110001',
	'0110010',
	'0110011',
	'0110100',
	'0110101',
	'0110110',
	'0110111',
	'0111000',
	'0111001',
	'0111010',
	'0111011',
	'0111100',
	'0111101',
	'0111110',
	'0111111',
	'1000000',
	'1000001',
	'1000010',
	'1000011',
	'1000100',
	'1000101',
	'1000110',
	'1000111',
	'1001000',
	'1001001',
	'1001010',
	'1001011',
	'1001100',
	'1001101',
	'1001110',
	'1001111',
	'1010000',
	'1010001',
	'1010010',
	'1010011',
	'1010100',
	'1010101',
	'1010110',
	'1010111',
	'1011000',
	'1011001',
	'1011010',
	'1011011',
	'1011100',
	'1011101',
	'1011110',
	'1011111',
	'1100000',
	'1100001',
	'1100010',
	'1100011',
	'1100100',
	'1100101',
	'1100110',
	'1100111',
	'1101000',
	'1101001',
	'1101010',
	'1101011',
	'1101100',
	'1101101',
	'1101110',
	'1101111',
	'1110000',
	'1110001',
	'1110010',
	'1110011',
	'1110100',
	'1110101',
	'1110110',
	'1110111',
	'1111000',
	'1111001',
	'1111010',
	'1111011',
	'1111100',
	'1111101',
	'1111110',
	'1111111',
]

const owners = ['Michael', 'Nellie', 'Rock', 'Ruby']

const errors = {title: '', recurrencePattern: '', owner: ''}

if (Astro.request.method === 'POST') {
	try {
		const data = await Astro.request.formData()
		const title = String(data.get('title'))
		const recurrencePattern = String(
			data.get('recurrencePattern')
		)
		const owner = String(data.get('owner'))

		if (typeof title !== 'string' || title.length < 1) {
			errors.title += 'Please enter a title. '
		}
		if (
			typeof recurrencePattern !== 'string' ||
			!recurrencePatterns.includes(recurrencePattern)
		) {
			errors.recurrencePattern += 'Pattern is invalid. '
		}
		if (typeof owner !== 'string' || !owners.includes(owner)) {
			errors.owner +=
				'Not a valid owner. Please choose from the list.'
		}

		const hasErrors = Object.values(errors).some((msg) => msg)

		if (!hasErrors) {
			await client.mutation(api.habits.create, {
				title,
				recurrence_pattern: recurrencePattern,
				owner,
			})
			return Astro.redirect('/dashboard')
		}
	} catch (error) {
		if (error instanceof Error) {
			console.error(error.message)
		}
	}
}
---

<Layout>
	<Prose as="main">
		<h1>Create a habit</h1>

		<form method="POST">
			<div>
				<label>
					Title:
					<input type="text" name="title" required />
					{errors.title && <p>{errors.title}</p>}
				</label>
			</div>
			<div>
				<label>
					Recurrence pattern:
					<input
						type="text"
						name="recurrencePattern"
						required
						minlength="7"
						maxlength="7"
					/>
					{
						errors.recurrencePattern && (
							<p>{errors.recurrencePattern}</p>
						)
					}
				</label>
			</div>
			<div>
				<label>
					Owner:
					<input type="text" name="owner" required />
					{errors.owner && <p>{errors.owner}</p>}
				</label>
			</div>
			<button>Submit</button>
		</form>
		<footer>
			<SignOut />
		</footer>
	</Prose>
</Layout>
